//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Vector2 p_default_Movement;
        
        private static SteamVR_Action_Vector2 p_default_Look;
        
        private static SteamVR_Action_Boolean p_default_TriggerPress;
        
        private static SteamVR_Action_Boolean p_default_TriggerTouch;
        
        private static SteamVR_Action_Single p_default_TriggerMove;
        
        private static SteamVR_Action_Boolean p_default_GripTouch;
        
        private static SteamVR_Action_Single p_default_GripMove;
        
        private static SteamVR_Action_Boolean p_default_ThumbTouch;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_Movement
        {
            get
            {
                return SteamVR_Actions.p_default_Movement.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_Look
        {
            get
            {
                return SteamVR_Actions.p_default_Look.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TriggerPress
        {
            get
            {
                return SteamVR_Actions.p_default_TriggerPress.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TriggerTouch
        {
            get
            {
                return SteamVR_Actions.p_default_TriggerTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single default_TriggerMove
        {
            get
            {
                return SteamVR_Actions.p_default_TriggerMove.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GripTouch
        {
            get
            {
                return SteamVR_Actions.p_default_GripTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single default_GripMove
        {
            get
            {
                return SteamVR_Actions.p_default_GripMove.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_ThumbTouch
        {
            get
            {
                return SteamVR_Actions.p_default_ThumbTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_Movement,
                    SteamVR_Actions.default_Look,
                    SteamVR_Actions.default_TriggerPress,
                    SteamVR_Actions.default_TriggerTouch,
                    SteamVR_Actions.default_TriggerMove,
                    SteamVR_Actions.default_GripTouch,
                    SteamVR_Actions.default_GripMove,
                    SteamVR_Actions.default_ThumbTouch,
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_Movement,
                    SteamVR_Actions.default_Look,
                    SteamVR_Actions.default_TriggerPress,
                    SteamVR_Actions.default_TriggerTouch,
                    SteamVR_Actions.default_TriggerMove,
                    SteamVR_Actions.default_GripTouch,
                    SteamVR_Actions.default_GripMove,
                    SteamVR_Actions.default_ThumbTouch};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_TriggerPress,
                    SteamVR_Actions.default_TriggerTouch,
                    SteamVR_Actions.default_GripTouch,
                    SteamVR_Actions.default_ThumbTouch};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_TriggerMove,
                    SteamVR_Actions.default_GripMove};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.default_Movement,
                    SteamVR_Actions.default_Look};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[0];
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_Movement,
                    SteamVR_Actions.default_Look,
                    SteamVR_Actions.default_TriggerPress,
                    SteamVR_Actions.default_TriggerTouch,
                    SteamVR_Actions.default_TriggerMove,
                    SteamVR_Actions.default_GripTouch,
                    SteamVR_Actions.default_GripMove,
                    SteamVR_Actions.default_ThumbTouch};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_Movement = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/Movement")));
            SteamVR_Actions.p_default_Look = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/Look")));
            SteamVR_Actions.p_default_TriggerPress = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TriggerPress")));
            SteamVR_Actions.p_default_TriggerTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TriggerTouch")));
            SteamVR_Actions.p_default_TriggerMove = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/TriggerMove")));
            SteamVR_Actions.p_default_GripTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GripTouch")));
            SteamVR_Actions.p_default_GripMove = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/GripMove")));
            SteamVR_Actions.p_default_ThumbTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/ThumbTouch")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
        }
    }
}
